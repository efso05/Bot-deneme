import discord
from discord.ext import commands
import re
import requests

API_KEY = 'weather API key'

intents = discord.Intents.default()
intents.message_content = True
intents.messages = True
intents.guilds = True

join_dates = {}


bot = commands.Bot(command_prefix='!', intents=intents)
@bot.event
async def on_ready():
     print(f'{bot.user} olarak giriş yaptık')

@bot.event
async def on_member_join(member):
    join_dates[member.id] = member.joined_at.strftime('%Y-%m-%d %H:%M:%S')
    print(f'{member.name} katıldı!')

@bot.event
async def on_member_remove(member):
    print(f'{member.name} ayrıldı.')
    channel = bot.get_channel(1201198143992246342)  # Mesaj göndermek istediğiniz kanalın ID'sini girin
    if channel:
        await channel.send(f'{member.name} ayrıldı.')

@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    if contains_link(message.content):
        await message.channel.send(f"{message.author.mention} bağlantı paylaşmak yasaktır!")
        await ban_user(message.author)
        return

    await bot.process_commands(message)

def contains_link(message):
    link_pattern = re.compile(r"http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+")
    return re.search(link_pattern, message) is not None

async def ban_user(user):
    guild = user.guild
    await guild.ban(user, reason="Bağlantı paylaşmak yasaktır")

@bot.command()
async def merhaba(ctx):
    await ctx.send(f'Merhaba {bot.user}! Ben bir botum!')

@bot.command()
async def banana(ctx):
     await ctx.send(f'ulala BANANAAAAA')

@bot.command()
async def Hakkında(ctx):
     await ctx.send(f'Ben kötü adamlar için çalışan kötü bir minionum ve sizin discord serverınızı ele geçirmek için geldim.')

@bot.command()
async def topla(ctx, *args):
    try:
        numbers = list(map(int, args))
        result = sum(numbers)
        await ctx.send(f'Sonuç: {result}')
    except ValueError:
        await ctx.send('Lütfen sadece sayı giriniz')

@bot.command()
async def katilma_tarihi(ctx, member: discord.Member = None):
    if member is None:
        member = ctx.author
    join_date = join_dates.get(member.id, 'Bilinmiyor')
    await ctx.send(f'{member.name} kullanıcısının katılma tarihi: {join_date}')

@bot.command()
async def hava(ctx, *, city: str):
    if not city:
        await ctx.send("Lütfen bir şehir adı belirtin. Örnek: `!hava İstanbul`")
        return

    try:
        # WeatherAPI'ye istek gönder
        url = f"http://api.weatherapi.com/v1/current.json?key={API_KEY}&q={city}&lang=tr"
        response = requests.get(url)
        weather = response.json()

        # API yanıtını konsola yazdır
        print(weather)

        # Hava durumu bilgilerini al
        city_name = weather['location']['name']
        temperature = weather['current']['temp_c']
        feels_like = weather['current']['feelslike_c']
        humidity = weather['current']['humidity']
        wind_speed = weather['current']['wind_kph']
        description = weather['current']['condition']['text']

        # Hava durumu bilgilerini Discord'a gönder
        weather_info = (
            f"Şehir: {city_name}\n"
            f"Sıcaklık: {temperature}°C\n"
            f"Hissedilen: {feels_like}°C\n"
            f"Nem: {humidity}%\n"
            f"Rüzgar: {wind_speed} km/s\n"
            f"Durum: {description}"
        )

        await ctx.send(weather_info)
    except Exception as e:
        print(e)
        await ctx.send("Hava durumu bilgisi alınamadı. Şehir adını kontrol edin.")


@bot.command()  # Kullanıcının banlanma haklarına sahip olmasını gerektiren "ban" komutunun tanımlanması
@commands.has_permissions(ban_members=True)
async def ban(ctx, member: discord.Member = None):
    if member:  # Komutun banlanması gereken kullanıcıyı belirtip belirtmediğinin kontrol edilmesi
        if ctx.author.top_role <= member.top_role:
            await ctx.send("Eşit veya daha yüksek rütbeli bir kullanıcıyı yasaklamak mümkün değildir!")
        else:
            await ctx.guild.ban(member)  # Bir kullanıcıyı sunucudan banlama
            await ctx.send(f" Kullanıcı {member.name} banlandı.")  # Başarılı bir banlama hakkında mesaj gönderme
    else:
        await ctx.send("Bu komut banlamak istediğiniz kullanıcıyı işaret etmelidir. Örneğin: `!ban @user`")

@ban.error  # "ban" komutu için bir hata işleyicisi tanımlayın
async def ban_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send("Bu komutu çalıştırmak için yeterli izniniz yok.")  # Kullanıcıyı erişim hakları hatası hakkında bilgilendiren bir mesaj gönderme
    elif isinstance(error, commands.MemberNotFound):
        await ctx.send("Kullanıcı bulunamadı.")  # Belirtilen kullanıcı bulunamazsa bir hata mesajı gönderme

bot.run("Bot token")    
