import aiohttp
import random

class Pokemon:
    pokemons = {}

    def __init__(self, pokemon_trainer):
        self.pokemon_trainer = pokemon_trainer
        self.pokemon_number = random.randint(1, 1000)
        self.name = None
        self.feed_count = 0
        self.level = 1

        if pokemon_trainer in Pokemon.pokemons:
            self = Pokemon.pokemons[pokemon_trainer]
        else:
            Pokemon.pokemons[pokemon_trainer] = self

    async def _fetch_pokemon_data(self):
        url = f'https://pokeapi.co/api/v2/pokemon/{self.pokemon_number}'
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response.status == 200:
                    return await response.json()
                return None

    async def get_name(self):
        if not self.name:
            data = await self._fetch_pokemon_data()
            if data:
                self.name = data['forms'][0]['name']
        return self.name

    async def info(self):
        if not self.name:
            self.name = await self.get_name()
        return f"Pokémonunuzun ismi: {self.name}"

    async def show_img(self):
        data = await self._fetch_pokemon_data()
        if data:
            return data['sprites']['front_default']
        return None

    async def hp(self):
        data = await self._fetch_pokemon_data()
        if data:
            base_hp = data['stats'][0]['base_stat']
            return base_hp + (self.level - 1) * 10  # Her levelde HP'yi artır
        return 0
    
    async def attack(self):
        data = await self._fetch_pokemon_data()
        if data:
            base_attack = data['stats'][1]['base_stat']
            return base_attack + (self.level - 1) * 10  # Her levelde HP'yi artır
        return 0

    async def feed(self):
        self.feed_count += 1
        if self.feed_count % 10 == 0:
            self.level += 1
            return f"{self.name} beslendi! 🍎 Level atladı: {self.level}"
        return f"{self.name} beslendi! 🍎 Beslenme sayısı: {self.feed_count}"

    async def stats(self):
        hp = await self.hp()  # self.hp() metodunu çağırarak can bilgisini al
        attack = await self.attack()
        return (
            f"Pokémon: {self.name}\n"
            f"Level: {self.level}\n"
            f"Beslenme sayısı: {self.feed_count}\n"
            f"Can (HP): {hp}\n"
            f"Atak: {attack}"
        )
